import shlex, subprocess
import sys
import os
import copy
import string
import csv
from pathlib import Path
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPClassifier

def predict(filename):

    params = []
    cmd_line="python pdfid.py "
    row_list=["obj","endobj","stream","endstream","xref","trailer","startxref","page","encrypt","objstm","js","javascript","aa","openaction","acroform","jbig2decode","richmedia","launch","embeddedfile","xfa","colours"]
    try:
        cmd_line = cmd_line + filename
        args = shlex.split(cmd_line)
        process = subprocess.Popen(args, stdout=subprocess.PIPE)
        res=[]
        for line in process.stdout:
            s=copy.deepcopy(line)
            res.append(s)
        
        fin=[]
        lines=[]
        for sp in res:
            sp=sp.split(" ")
            fin.append(sp)

        for item in fin:
            lines.append(item[-1])     
        lines[:] = [line.rstrip('\n') for line in lines]     
        lines = lines[2:-1]

        for item in lines:
            params.append(float(item))
    except:
        print("skipped file " + filename)

    params = [params]

    data_train = pd.read_csv("dataset.csv")
    df = pd.DataFrame(data_train)

    df.fillna(0, inplace=True)
    X_train=df.drop(['tag'], axis=1)
    y_train=pd.read_csv("dataset.csv", usecols = ['tag'])
    y_train.fillna(0, inplace=True)

    clf = MLPClassifier(hidden_layer_sizes=(4,8), max_iter=300,activation = 'relu',solver='adam',random_state=1)
    clf.fit(X_train, y_train.values.ravel())
    y_pred = clf.predict(params)[0]
    return y_pred


if __name__ == "__main__":
    print(predict("./test_pdf/mal-1"))